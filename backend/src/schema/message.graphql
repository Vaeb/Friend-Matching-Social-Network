type Message {
    id: Int!
    text: String!
    from: User!
    to: User!
    createdAt: Date!
}

type MessageResponse {
    ok: Boolean!
    errors: [Error!]
    message: Message
}

type MessageSubResponse {
    message: Message!
    meId: Boolean!
    otherId: Boolean!
    fromMe: Boolean!
}

type Query {
    pingTest: String
    getMessages(target: Int!, limit: Int): [Message!]!
}

type Mutation {
    sendMessage(to: Int!, text: String!): MessageResponse!
}

type Subscription {
    newMessage: Message!
}
